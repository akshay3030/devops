version: '2.4'

services:

  consul-agent-1: &consul-agent
    image: consul${CNSLTAG}
    volumes:
      - ./configs/agent/:/consul/config/
    command: "agent -retry-join consul-server-bootstrap -client 0.0.0.0 -encrypt \"${SCRTKEY}\""
    mem_limit: 500m
    restart: always
    networks:
      - consul-demo

  consul-agent-2:
    <<: *consul-agent

  consul-agent-3:
    <<: *consul-agent

  consul-server-1: &consul-server
    <<: *consul-agent
    volumes:
      - ./configs/server/:/consul/config/
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0 -encrypt \"${SCRTKEY}\""

  consul-server-2:
    <<: *consul-server

  consul-server-bootstrap:
    <<: *consul-agent
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
    volumes:
      - ./configs/server/:/consul/config/
    command: "agent -server -bootstrap-expect 3 -ui -client 0.0.0.0 -encrypt \"${SCRTKEY}\""

  consul-esm:
    depends_on:
      - consul-server-bootstrap
    image: consul-esm${CESMTAG}
    build:
      context: .
      dockerfile: Dockerfile_ConsulESM
    volumes:
      - .:/mnt
    environment:
      - CONSUL_HTTP_ADDR=consul-server-bootstrap:8500
    command: sh -c "/mnt/wait-for-command.sh -c 'nc -vz consul-server-bootstrap 8500' -s 0 && consul-esm -config-dir=/etc/consul-esm.d"
    mem_limit: 500m
    restart: always
    networks:
      - consul-demo

  consul-alerts:
    depends_on:
      - consul-server-bootstrap
    image: consul-alerts${CALRTAG}
    build:
      context: .
      dockerfile: Dockerfile_ConsulAlerts
    volumes:
      - .:/mnt
    ports:
      - "19000:9000"
    command: sh -c "/mnt/wait-for-command.sh -c 'nc -vz consul-server-bootstrap 8500' -s 0 && consul-alerts start --alert-addr=0.0.0.0:9000 --consul-addr=consul-server-bootstrap:8500 --watch-events --watch-checks --log-level=debug"
    mem_limit: 500m
    restart: always
    networks:
      - consul-demo

  hashiui:
    depends_on:
      - consul-server-bootstrap
    image: jippi/hashi-ui${HSUITAG}
    volumes:
      - ./certs/out:/etc/ssl/certs
      - .:/mnt
    ports:
      - "3000:3000"
    environment:
      - CONSUL_ENABLE=1
#      - CONSUL_READ_ONLY=1
      - CONSUL_ADDR=consul-server-bootstrap:8500
      - HTTPS_ENABLE=true
      - SERVER_CERT=/etc/ssl/certs/test.crt
      - SERVER_KEY=/etc/ssl/certs/test.key
    command: sh -c "/mnt/wait-for-command.sh -c 'nc -vz consul-server-bootstrap 8500' -s 0 && /hashi-ui"
    mem_limit: 500m
    restart: always
    networks:
      - consul-demo

  consulbench:
    depends_on:
      - hashiui
    image: consulbench${CNSBTAG}
    build:
      context: .
      dockerfile: Dockerfile_ConsulBench
    command: -service benchmarking -register 200 -flap-interval 10s -watchers 500 -consul consul-server-bootstrap:8500
    mem_limit: 500m
    networks:
      - consul-demo

  echoserver:
    image: echoserver${ESVRTAG}
    build:
      context: .
      dockerfile: Dockerfile_EchoServer
    ports:
      - "18181:8181"
    mem_limit: 250m
    restart: always
    networks:
      - consul-demo

  testclient:
    depends_on:
      - echoserver
    image: alpine${TSTCTAG}
    command: sh -c "echo 'hello to socat from nc' | nc echoserver 8181"
    mem_limit: 250m
    networks:
      - consul-demo

networks:
  consul-demo:
