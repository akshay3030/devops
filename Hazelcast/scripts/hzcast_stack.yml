version: '2.1'

services:

  hzcast1:
    image: hazelcast/hazelcast${HZMWTAG}
    container_name: hzcast1
    hostname: hzcast1
    volumes:
      - ./hazelcast.xml:/opt/hazelcast/hazelcast.xml
      - hzcast1-data:/data
    ports:
      - "15701:15701"
      - "28080:8080"
    environment:
      - JAVA_OPTS=-XX:MaxDirectMemorySize=1G -Dhazelcast.jmx=true -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/data -Dhazelcast.config=hazelcast.xml -Dhazelcast.http.healthcheck.enabled=true
      - MANCENTER_URL=http://hzcastmc:8080/hazelcast-mancenter -Dhazelcast.config=hazelcast.xml -Dhazelcast.http.healthcheck.enabled=true
      - MIN_HEAP_SIZE=500m
      - MAX_HEAP_SIZE=500m
      - PROMETHEUS_PORT=8080
    mem_limit: 500m
    restart: always
    networks:
        - hzcast-demo

  hzcast2:
    image: hazelcast/hazelcast${HZMWTAG}
    container_name: hzcast2
    hostname: hzcast2
    volumes:
      - ./hazelcast.xml:/opt/hazelcast/hazelcast.xml
      - hzcast2-data:/data
    ports:
      - "15702:15701"
      - "28081:8080"
    environment:
      - JAVA_OPTS=-XX:MaxDirectMemorySize=1G -Dhazelcast.jmx=true -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/data -Dhazelcast.config=hazelcast.xml -Dhazelcast.http.healthcheck.enabled=true
      - MANCENTER_URL=http://hzcastmc:8080/hazelcast-mancenter
      - MIN_HEAP_SIZE=500m
      - MAX_HEAP_SIZE=500m
      - PROMETHEUS_PORT=8080
    mem_limit: 500m
    restart: always
    networks:
      - hzcast-demo
  
  hzcast3:
    image: hazelcast/hazelcast${HZMWTAG}
    container_name: hzcast3
    hostname: hzcast3
    volumes:
      - ./hazelcast.xml:/opt/hazelcast/hazelcast.xml
      - hzcast3-data:/data
    ports:
      - "15703:15701"
      - "28082:8080"
    environment:
      - JAVA_OPTS=-XX:MaxDirectMemorySize=1G -Dhazelcast.jmx=true -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/data -Dhazelcast.config=hazelcast.xml -Dhazelcast.http.healthcheck.enabled=true
      - MANCENTER_URL=http://hzcastmc:8080/hazelcast-mancenter
      - MIN_HEAP_SIZE=500m
      - MAX_HEAP_SIZE=500m
      - PROMETHEUS_PORT=8080
    mem_limit: 500m
    restart: always
    networks:
      - hzcast-demo

  tlsproxy:
    image: tlsproxy${TPXYTAG}
    build:
      context: .
      dockerfile: Dockerfile_TLSPrxy
    container_name: tlsproxy
    hostname: tlsproxy
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "80:80"
      - "443:443"
    mem_limit: 500m
    restart: always
    networks:
      - hzcast-demo

  hzcastmc:
    depends_on:
      - tlsproxy
    image: hazelcast/management-center${HZMCTAG}
    container_name: hzcastmc
    hostname: hzcastmc
    volumes:
      - hzcastmc-data:/data
    ports:
      - "18080:8080"
    environment:
      - MIN_HEAP_SIZE=500m
      - MAX_HEAP_SIZE=500m
    mem_limit: 500m
    restart: always
    networks:
      - hzcast-demo

  cadvisor:
    image: google/cadvisor${CADVTAG}
    container_name: cadvisor
    hostname: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "38080:8080"
    mem_limit: 500m
    restart: always
    networks:
      - hzcast-demo

  portainer:
    image: portainer/portainer${PTNRTAG}
    container_name: portainer
    hostname: portainer
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "19000:9000"
    mem_limit: 500m
    restart: always
    networks:
      - hzcast-demo

  prometheus:
    image: prom/prometheus${PROMTAG}
    container_name: prometheus
    hostname: prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "19090:9090"
    mem_limit: 500m
    restart: always
    networks:
      - hzcast-demo

  grafana:
    image: grafana/grafana${GRFNTAG}
    container_name: grafana
    hostname: grafana
    ports:
      - "13000:3000"
    mem_limit: 500m
    restart: always
    networks:
      - hzcast-demo

  hzacptest:
    depends_on:
      - hzcast1
      - hzcast2
      - hzcast3
    image: hzacptest${HZATTAG}
    build:
      context: .
      dockerfile: Dockerfile_HZAcpTst
    container_name: hzacptest
    hostname: hzacptest
    volumes:
      - ./acceptance_test_hzcastmw.py:/tmp/acceptance_test_hzcastmw.py
    entrypoint:
      - /tmp/acceptance_test_hzcastmw.py
      - hzcast1:15701,hzcast2:15701,hzcast3:15701
      - "100000"
    mem_limit: 500m
    networks:
      - hzcast-demo

volumes:
  hzcastmc-data:
  hzcast1-data:
  hzcast2-data:
  hzcast3-data:
  portainer-data:
  prometheus-data:

networks:
  hzcast-demo:
