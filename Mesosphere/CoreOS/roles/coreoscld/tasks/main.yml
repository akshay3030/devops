---
- name: create keypair
  ec2_key: name={{ keypairname }}
           state={{ state }}
           region={{ region }}
           wait=true
  register: keypair

- debug: var=keypair

- name: sg for coreos test
  ec2_group:
    name: "{{ group }}"
    region: "{{ region }}"
    state: "{{ state }}"
    description: "CoreOS test security group"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 4001
        to_port: 4001
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 7001
        to_port: 7001
        cidr_ip: 0.0.0.0/0
  register: sg

- debug: var=sg

- name: write keypair file
  template: src=keypair.j2
            dest="{{ keypairloc }}/{{ keypairname }}.cer"
            mode=0400
  when: keypair.key.private_key is defined

- name: bringup ec2 instance
  ec2: image={{ image }}
       instance_type={{ instance_type }}
       keypair={{ keypairname }}
       region={{ region }}
       group={{ group }}
       instance_tags='{"Name":"CoreOS Test"}'
       count={{ count }}
       wait=true
  register: ec2_info

- debug: var=ec2_info
- debug: var=item
  with_items: ec2_info.instance_ids

- name: add host info to in-memory inventory
  add_host: hostname={{ item.public_ip }} groupname=ec2hosts
  with_items: ec2_info.instances

- name: wait for instances to listen on port:22
  wait_for:
    state=started
    host={{ item.public_dns_name }}
    port=22
  with_items: ec2_info.instances

- name: small pause to let sshd stabilize
  pause: seconds=10

