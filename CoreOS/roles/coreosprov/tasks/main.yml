---
- name: dump instance id
  raw: curl http://169.254.169.254/latest/meta-data/instance-id
  register: instid
- debug: var=instid.stdout

- name: dump public hostname
  raw: curl http://169.254.169.254/latest/meta-data/public-hostname
  register: phnme
- debug: var=phnme.stdout

- name: pre-process bootstrap file
  command: /bin/bash patch_bootstrap.sh
  delegate_to: 127.0.0.1
  args:
    chdir: roles/coreosprov/files/
  run_once: true
  register: ppsbs
- debug: var=ppsbs.stdout

- name: scp bootstrap+services file to nodes
  command: /usr/bin/scp -oStrictHostKeyChecking=no -i "{{ keypairloc }}/{{ keypairname }}.cer" bootstrap "{{ tausrvc }}" "{{ tgasrvc }}.service" "core@{{ phnme.stdout }}:/tmp/"
  delegate_to: 127.0.0.1
  args:
    chdir: roles/coreosprov/files/
  register: scpbs
- debug: var=scpbs.stdout

- name: bootstrap through cloud-config
  raw: sudo coreos-cloudinit --from-file /tmp/bootstrap
  register: bsout
- debug: var=bsout.stdout

- name: small pause for cluster buildup
  pause: seconds=10

- name: dump cluster info
  raw: fleetctl list-machines
  ignore_errors: true
  register: fltout
- debug: var=fltout.stdout

- name: start container app on a node
  raw: fleetctl start "/tmp/{{ tausrvc }}"
  run_once: true
  register: tauout
- debug: var=tauout.stdout
  
- name: start container apps in HA mode
  raw: fleetctl submit "/tmp/{{ tgasrvc }}.service" && fleetctl start "{{ tgasrvc }}1" && fleetctl start "{{ tgasrvc }}2" 
  run_once: true
  register: tgaout
- debug: var=tgaout.stdout
  
- name: dump running containers on cluster
  raw: fleetctl list-units
  ignore_errors: true
  register: fluout
- debug: var=fluout.stdout

